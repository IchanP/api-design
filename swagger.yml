openapi: 3.0.0
info:
  title: 1DV027 API
  description: "An api for the course 1dv027, view anime data and be notified about new episodes"
  version: 0.0.0
servers:
  - url: http://localhost:3000
    description: Optional server description, e.g. Main (production) server
tags:
  - name: auth
    description: Everything about your Pets
paths:
  /login:
    post:
      tags: 
      - auth
      summary: Allows the user to login.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                  email:
                    type: string
                  password:
                    type: string
      responses:
        '200':
          description: 'Successful login'
          content: 
            application/json:
              schema:
                type: object
                properties:
                  accesstoken:
                    type: string
                  refreshtoken:
                    type: string
      
        '401':
          description: 'Invalid credentials'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /register:
    post:
      tags:
      - auth
      summary: 'The user calls this to register an account with the API.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
      responses:
        '201':
          description: 'Successful registration, a new account is created.'
          content:
           application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example:
                      201
                  id:
                    type: string
                    example:
                      65f19170a691b9af5c9ba094
        '409':
          description: 'Data provided by the client is duplicate of what is present on server.'
          content:
           application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example:
                     409
                  message:
                    type: string
                    example: 
                      Duplicate data found, this data already exists

        '400':
          description: 'Something went wrong with the request due to what was perceived to be a client error'
          content:
           application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example:
                      400 
                  message:
                    type: string
                    example: 
                      'Invalid data provided'
        '500':
          description: An unexpected condition was encountered on the server.
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: number
                    example:
                      500
                  message:
                    type: string
                    example:
                      An unexpected condition was encountered on the server


